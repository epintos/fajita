//-------------- roops_core_objects_NodeCachingLinkedList --------------//
module roops_core_objects_NodeCachingLinkedList
sig roops_core_objects_NodeCachingLinkedList extends java_lang_Object {}
{}
field roops_core_objects_NodeCachingLinkedList_header:(roops_core_objects_NodeCachingLinkedList)->one(null+roops_core_objects_LinkedListNode) {}
field roops_core_objects_NodeCachingLinkedList_firstCachedNode:(roops_core_objects_NodeCachingLinkedList)->one(null+roops_core_objects_LinkedListNode) {}
field roops_core_objects_NodeCachingLinkedList_maximumCacheSize:(roops_core_objects_NodeCachingLinkedList)->one(JavaPrimitiveIntegerValue) {}
field roops_core_objects_NodeCachingLinkedList_cacheSize:(roops_core_objects_NodeCachingLinkedList)->one(JavaPrimitiveIntegerValue) {}
field roops_core_objects_NodeCachingLinkedList_size:(roops_core_objects_NodeCachingLinkedList)->one(JavaPrimitiveIntegerValue) {}
field roops_core_objects_NodeCachingLinkedList_DEFAULT_MAXIMUM_CACHE_SIZE:(roops_core_objects_NodeCachingLinkedList)->one(JavaPrimitiveIntegerValue) {}
field roops_core_objects_NodeCachingLinkedList_modCount:(roops_core_objects_NodeCachingLinkedList)->one(JavaPrimitiveIntegerValue) {}
field roops_core_objects_NodeCachingLinkedList_i:(roops_core_objects_NodeCachingLinkedList)->one(JavaPrimitiveIntegerValue) {}

object_invariant
   equ[SK_jml_pred_java_primitive_integer_value_add_ARG_result_4,
      JavaPrimitiveIntegerLiteral3]

object_invariant
   pred_java_primitive_integer_value_gt[SK_jml_pred_java_primitive_integer_value_mul_ARG_result_0,
                                       SK_jml_pred_java_primitive_integer_value_add_ARG_result_2]

object_invariant
   pred_java_primitive_integer_value_gt[SK_jml_pred_java_primitive_integer_value_add_ARG_result_1,
                                       JavaPrimitiveIntegerLiteral5]



program roops_core_objects_NodeCachingLinkedList::Constructor[
  var thiz:roops_core_objects_NodeCachingLinkedList,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_header:=((null+roops_core_objects_LinkedListNode) & (null));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_firstCachedNode:=((null+roops_core_objects_LinkedListNode) & (null));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_maximumCacheSize:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_cacheSize:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_size:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_DEFAULT_MAXIMUM_CACHE_SIZE:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_modCount:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_i:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
            var t_1:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  createObject<roops_core_objects_LinkedListNode>[t_1];
                  if isEmptyOrNull[t_1]{
                     throw:=java_lang_NullPointerExceptionLit;
                  } else {
                     call Constructor[t_1,throw];
                  };
               
               }
             else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_header:=t_1;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz.roops_core_objects_NodeCachingLinkedList_header]
               or 
               isEmptyOrNull[thiz]
               
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  (thiz.roops_core_objects_NodeCachingLinkedList_header).roops_core_objects_LinkedListNode_next:=thiz.roops_core_objects_NodeCachingLinkedList_header;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz.roops_core_objects_NodeCachingLinkedList_header]
               or 
               isEmptyOrNull[thiz]
               
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  (thiz.roops_core_objects_NodeCachingLinkedList_header).roops_core_objects_LinkedListNode_previous:=thiz.roops_core_objects_NodeCachingLinkedList_header;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_firstCachedNode:=((null+roops_core_objects_LinkedListNode) & (null));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_size:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_cacheSize:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_DEFAULT_MAXIMUM_CACHE_SIZE:=JavaPrimitiveIntegerLiteral3;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_maximumCacheSize:=JavaPrimitiveIntegerLiteral3;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_modCount:=JavaPrimitiveIntegerLiteral0;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_NodeCachingLinkedList::min3[
  var thiz:roops_core_objects_NodeCachingLinkedList,
  var throw:java_lang_Throwable+null,
  var return:JavaPrimitiveIntegerValue,
  var i:JavaPrimitiveIntegerValue,
  var j:JavaPrimitiveIntegerValue,
  var k:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_1:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_2:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_3:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_4:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_1:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_0:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_3:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_2:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_4:boolean,
  var SK_jml_pred_java_primitive_integer_value_mul_ARG_overflow_0:boolean,
  var SK_jml_pred_java_primitive_integer_value_mul_ARG_result_0:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_0:JavaPrimitiveIntegerValue] 
Specification 
{
  SpecCase #0 {
   requires {
      true=true
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                pred_java_primitive_integer_value_lte[return',
                                                     i']
                and 
                pred_java_primitive_integer_value_lte[return',
                                                     j']
                and 
                pred_java_primitive_integer_value_lte[return',
                                                     k']
              )
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                equ[return',
                   i']
                or 
                equ[return',
                   j']
                
                or 
                equ[return',
                   k']
              )
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_5:boolean;
            var t_6:boolean;
            var t_7:boolean;
            var var_1_output:JavaPrimitiveIntegerValue;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_1_output:=JavaPrimitiveIntegerLiteral0;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_6:=(pred_java_primitive_integer_value_lte[i,
                                                    j]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_7:=(pred_java_primitive_integer_value_lte[i,
                                                    k]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_6=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_7=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_5:=true;
                        } else {
                           skip;
                        };
                     } else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_5:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
               } else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_5:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_5=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_1_output:=i;
                  } else {
                     skip;
                  };
               } else    {
                     var t_2:boolean;
                     var t_3:boolean;
                     var t_4:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_3:=(pred_java_primitive_integer_value_lte[i,
                                                             j]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_4:=(pred_java_primitive_integer_value_lte[k,
                                                             j]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_3=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_2:=true;
                           } else {
                              skip;
                           };
                        } else {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_4=true{
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    t_2:=true;
                                 } else {
                                    skip;
                                 };
                              } else {
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    t_2:=false;
                                 } else {
                                    skip;
                                 };
                              };
                           } else {
                              skip;
                           };
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_2=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_1_output:=k;
                           } else {
                              skip;
                           };
                        } else {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_1_output:=fun_java_primitive_integer_value_add[j,JavaPrimitiveIntegerLiteral1];
                           } else {
                              skip;
                           };
                        };
                     } else {
                        skip;
                     };
                  
                  }
               ;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_1_output;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_NodeCachingLinkedList::removeOkTest[
  var thiz:roops_core_objects_NodeCachingLinkedList,
  var throw:java_lang_Throwable+null,
  var return:java_lang_Object+null,
  var index:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_5:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_6:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_6:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_5:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_1:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_2:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_3:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_4:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_1:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_0:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_3:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_2:boolean,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_overflow_4:boolean,
  var SK_jml_pred_java_primitive_integer_value_mul_ARG_overflow_0:boolean,
  var SK_jml_pred_java_primitive_integer_value_mul_ARG_result_0:JavaPrimitiveIntegerValue,
  var SK_jml_pred_java_primitive_integer_value_add_ARG_result_0:JavaPrimitiveIntegerValue] 
Specification 
{
  SpecCase #0 {
   requires {
      pred_java_primitive_integer_value_gt[SK_jml_pred_java_primitive_integer_value_add_ARG_result_5,
                                          JavaPrimitiveIntegerLiteral0]
   }
   
   requires {
      neq[thiz.roops_core_objects_NodeCachingLinkedList_header,
         null]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              pred_java_primitive_integer_value_lt[SK_jml_pred_java_primitive_integer_value_add_ARG_result_6,
                                                  JavaPrimitiveIntegerLiteral0]
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_i:=fun_java_primitive_integer_value_add[thiz.roops_core_objects_NodeCachingLinkedList_i,JavaPrimitiveIntegerLiteral1];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_i:=fun_java_primitive_integer_value_add[thiz.roops_core_objects_NodeCachingLinkedList_i,JavaPrimitiveIntegerLiteral2];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_i:=fun_java_primitive_integer_value_add[thiz.roops_core_objects_NodeCachingLinkedList_i,JavaPrimitiveIntegerLiteral1];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               index:=fun_java_primitive_integer_value_add[index,JavaPrimitiveIntegerLiteral1];
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_NodeCachingLinkedList_size:=fun_java_primitive_integer_value_add[thiz.roops_core_objects_NodeCachingLinkedList_size,JavaPrimitiveIntegerLiteral1];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=null;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }



