#-------------------------------------------------------------------------------------------------------------------
# ROOPS benchmark GENERAL settings
#-------------------------------------------------------------------------------------------------------------------

abstractSignatureObject=false

#DynJAlloyConfig.Class=ar.edu.dynjalloy.DynJAlloyConfigImpl

DynJAlloyConfig.Class=ar.edu.taco.TacoConfigurator

useCustomRelationalOverride=false

dynamicJavaLangFields=false

assertIsAssume=false

useClassSingletons=false

classExtendsObject=false

typeSafety=false

checkNullDereference=true

quantifierIncludesNull=true

# DANIEL: I changed this in order to make Taco use the inferScope mechanism
dynalloy.toAlloy.enable=true

#dynalloy.toAlloy.strictUnrolling=false

dynalloy.toAlloy.removeQuantifiers=true

#dynalloy.toAlloy.applySimplifications=true

dynamicJavaLangFields=false

skolemizeInstanceInvariant=false

skolemizeInstanceAbstraction=false

JMLObjectSetToAlloySet=true

JMLObjectSequenceToAlloySequence=true

jdynalloy.parser.enabled=true

newExceptionsAreLiterals=true

disableIntegerLiteralReduction=true

useMaxSequenceLength=false

noVerify=true

increaseBitwidthUsingLiterals=true

relevancyAnalisys=true

useJavaArithmetic=true

useJavaSBP=true

useTightUpperBounds=true

#DANIEL: I removed this in order to be able to execute fajita without the heuristic, if needed it's added by fajita
#removeExitWhileGuard=true

#-------------------------------------------------------------------------------------------------------------------
# BenchmarkMethod specific settings
#-------------------------------------------------------------------------------------------------------------------

jmlParser.appClassPath=result/fajitaOut/roops_core_objects_AvlTree/

jmlParser.sourcePathStr=result/fajitaOut/roops_core_objects_AvlTree/

output_dir=result/tacoOutput

relevantClasses=roops.core.objects.AvlNode,roops.core.objects.AvlTree,roops.util.RoopsArray

classToCheck=roops.core.objects.AvlTree

methodToCheck=searchMaxTest_0

dynalloy.toAlloy.loopUnroll=1

# DANIEL: Removed int bit width since it's now inferred
#int.bitwidth=5

# DANIEL: Removed assertion arguments since it's now inferred
#assertionArguments=${ASSERTION_ARGUMENTS}

type_scopes=roops.core.objects.AvlNode:1,roops.core.objects.AvlTree:1,roops.util.RoopsArray:1
inferScope=true
objectScope=3
useTightUpperBounds=true
