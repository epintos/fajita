//-------------- roops_core_objectsInstrumented_AvlTree --------------//
module roops_core_objectsInstrumented_AvlTree
sig roops_core_objectsInstrumented_AvlTree extends java_lang_Object {}
{}
field roops_core_objectsInstrumented_AvlTree_root:(roops_core_objectsInstrumented_AvlTree)->one(null+roops_core_objectsInstrumented_AvlNode) {}

object_invariant
   all x:roops_core_objectsInstrumented_AvlNode | {
     isSubset[x,
             fun_set_difference[(thiz.roops_core_objectsInstrumented_AvlTree_root).(fun_reflexive_closure[roops_core_objectsInstrumented_AvlNode_left+roops_core_objectsInstrumented_AvlNode_right]),null]]
     implies 
             (
               isNotSubset[x,
                          x.(fun_closure[roops_core_objectsInstrumented_AvlNode_left+roops_core_objectsInstrumented_AvlNode_right])]
               and 
               (
                 all y:roops_core_objectsInstrumented_AvlNode | {
                   isSubset[y,
                           fun_set_difference[(x.roops_core_objectsInstrumented_AvlNode_left).(fun_reflexive_closure[roops_core_objectsInstrumented_AvlNode_left+roops_core_objectsInstrumented_AvlNode_right]),null]]
                   implies 
                           pred_java_primitive_integer_value_lt[y.roops_core_objectsInstrumented_AvlNode_element,
                                                               x.roops_core_objectsInstrumented_AvlNode_element]
                 
                 }
               )
               and 
               (
                 all y:roops_core_objectsInstrumented_AvlNode | {
                   isSubset[y,
                           fun_set_difference[(x.roops_core_objectsInstrumented_AvlNode_right).(fun_reflexive_closure[roops_core_objectsInstrumented_AvlNode_left+roops_core_objectsInstrumented_AvlNode_right]),null]]
                   implies 
                           pred_java_primitive_integer_value_lt[x.roops_core_objectsInstrumented_AvlNode_element,
                                                               y.roops_core_objectsInstrumented_AvlNode_element]
                 
                 }
               )
               and 
               (
                 (
                   equ[x.roops_core_objectsInstrumented_AvlNode_left,
                      null]
                   and 
                   equ[x.roops_core_objectsInstrumented_AvlNode_right,
                      null]
                 )
                 implies 
                         equ[x.roops_core_objectsInstrumented_AvlNode_height,
                            JavaPrimitiveIntegerLiteral0]
               )
               and 
               (
                 (
                   equ[x.roops_core_objectsInstrumented_AvlNode_left,
                      null]
                   and 
                   neq[x.roops_core_objectsInstrumented_AvlNode_right,
                      null]
                 )
                 implies 
                         (
                           equ[x.roops_core_objectsInstrumented_AvlNode_height,
                              JavaPrimitiveIntegerLiteral1]
                           and 
                           equ[(x.roops_core_objectsInstrumented_AvlNode_right).roops_core_objectsInstrumented_AvlNode_height,
                              JavaPrimitiveIntegerLiteral0]
                         )
               )
               and 
               (
                 (
                   neq[x.roops_core_objectsInstrumented_AvlNode_left,
                      null]
                   and 
                   equ[x.roops_core_objectsInstrumented_AvlNode_right,
                      null]
                 )
                 implies 
                         (
                           equ[x.roops_core_objectsInstrumented_AvlNode_height,
                              JavaPrimitiveIntegerLiteral1]
                           and 
                           equ[(x.roops_core_objectsInstrumented_AvlNode_left).roops_core_objectsInstrumented_AvlNode_height,
                              JavaPrimitiveIntegerLiteral0]
                         )
               )
               and 
               (
                 (
                   neq[x.roops_core_objectsInstrumented_AvlNode_left,
                      null]
                   and 
                   neq[x.roops_core_objectsInstrumented_AvlNode_right,
                      null]
                 )
                 implies 
                         (
                           equ[x.roops_core_objectsInstrumented_AvlNode_height,
                              fun_java_primitive_integer_value_add[(pred_java_primitive_integer_value_gt[(x.roops_core_objectsInstrumented_AvlNode_left).roops_core_objectsInstrumented_AvlNode_height,
                                                                  (x.roops_core_objectsInstrumented_AvlNode_right).roops_core_objectsInstrumented_AvlNode_height]=>((x.roops_core_objectsInstrumented_AvlNode_left).roops_core_objectsInstrumented_AvlNode_height)else((x.roops_core_objectsInstrumented_AvlNode_right).roops_core_objectsInstrumented_AvlNode_height)),JavaPrimitiveIntegerLiteral1]
                           ]
                           and 
                           pred_java_primitive_integer_value_lte[(pred_java_primitive_integer_value_gt[(x.roops_core_objectsInstrumented_AvlNode_left).roops_core_objectsInstrumented_AvlNode_height,
                                                               (x.roops_core_objectsInstrumented_AvlNode_right).roops_core_objectsInstrumented_AvlNode_height]=>(fun_java_primitive_integer_value_sub[(x.roops_core_objectsInstrumented_AvlNode_left).roops_core_objectsInstrumented_AvlNode_height,(x.roops_core_objectsInstrumented_AvlNode_right).roops_core_objectsInstrumented_AvlNode_height])else(fun_java_primitive_integer_value_sub[(x.roops_core_objectsInstrumented_AvlNode_right).roops_core_objectsInstrumented_AvlNode_height,(x.roops_core_objectsInstrumented_AvlNode_left).roops_core_objectsInstrumented_AvlNode_height])),
                                                                JavaPrimitiveIntegerLiteral1]
                         )
               )
             )
   
   }

object_invariant
   not (
     thiz.roops_core_objectsInstrumented_AvlTree_root=null)



program roops_core_objectsInstrumented_AvlTree::searchNodeTest[
  var throw:java_lang_Throwable+null,
  var tree:null+roops_core_objectsInstrumented_AvlTree,
  var x:JavaPrimitiveIntegerValue] 
Specification 
{
  SpecCase #0 {
   ensures {
      liftExpression[false]
   }
   
   ensures {
      equ[throw',
         null]
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_1:boolean;
            var t_3:boolean;
            var t_4:boolean;
            var t_5:boolean;
            call roops_core_objectsInstrumented_AvlTree_fajita_roopsGoal_initialization[throw];
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_1:=(neq[tree,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_0:=(equ[t_1,
                     false]=>(true)else(false));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_1:=(neq[tree,
                     null]=>(true)else(false));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_4:=(neq[tree,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_4=true   {
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[tree]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call repOK[tree,throw,t_5];
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_5=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_3:=true;
                           } else {
                              skip;
                           };
                        } else {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_3:=false;
                           } else {
                              skip;
                           };
                        };
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_3:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_3=true   {
                     var t_2:null+roops_core_objectsInstrumented_AvlNode;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[tree]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call searchNode[tree,throw,t_2,x];
                        };
                     } else {
                        skip;
                     };
                     var var_1_ret_val:null+roops_core_objectsInstrumented_AvlNode;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_1_ret_val:=t_2;
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::Constructor[
  var thiz:roops_core_objectsInstrumented_AvlTree,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         skip;
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::searchMin[
  var thiz:roops_core_objectsInstrumented_AvlTree,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objectsInstrumented_AvlNode,
  var arg:null+roops_core_objectsInstrumented_AvlNode] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_23:boolean;
            var var_8_t:null+roops_core_objectsInstrumented_AvlNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_8_t:=arg;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_23:=(equ[var_8_t,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_23=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false)   {
                        return:=var_8_t;
                        exit_stmt_reached:=true;
                     
                     }
                   else {
                     skip;
                  };
               } else {
                  skip;
               };
            } else {
               skip;
            };
            var var_9_ws_3:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_9_ws_3:=(neq[var_8_t.roops_core_objectsInstrumented_AvlNode_left,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_9_ws_3]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_8_t]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        var_8_t:=var_8_t.roops_core_objectsInstrumented_AvlNode_left;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_9_ws_3:=(neq[var_8_t.roops_core_objectsInstrumented_AvlNode_left,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_8_t;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::searchMaxTest[
  var throw:java_lang_Throwable+null,
  var tree:null+roops_core_objectsInstrumented_AvlTree] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_7:boolean;
            var t_8:boolean;
            var t_9:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_8:=(neq[tree,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_8=true   {
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[tree]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call repOK[tree,throw,t_9];
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_9=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_7:=true;
                           } else {
                              skip;
                           };
                        } else {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_7:=false;
                           } else {
                              skip;
                           };
                        };
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_7:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_7=true   {
                     var t_6:null+roops_core_objectsInstrumented_AvlNode;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[tree]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call searchMax[tree,throw,t_6];
                        };
                     } else {
                        skip;
                     };
                     var var_2_ret_val:null+roops_core_objectsInstrumented_AvlNode;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_2_ret_val:=t_6;
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::searchMax[
  var thiz:roops_core_objectsInstrumented_AvlTree,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objectsInstrumented_AvlNode,
  var arg:null+roops_core_objectsInstrumented_AvlNode] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_21:boolean;
            var var_6_t:null+roops_core_objectsInstrumented_AvlNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_6_t:=arg;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_21:=(equ[var_6_t,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_21=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false)   {
                        return:=var_6_t;
                        exit_stmt_reached:=true;
                     
                     }
                   else {
                     skip;
                  };
               } else {
                  skip;
               };
            } else {
               skip;
            };
            var var_7_ws_2:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_7_ws_2:=(neq[var_6_t.roops_core_objectsInstrumented_AvlNode_right,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_7_ws_2]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_6_t]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        var_6_t:=var_6_t.roops_core_objectsInstrumented_AvlNode_right;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_7_ws_2:=(neq[var_6_t.roops_core_objectsInstrumented_AvlNode_right,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_6_t;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::repOK[
  var thiz:roops_core_objectsInstrumented_AvlTree,
  var throw:java_lang_Throwable+null,
  var return:boolean] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         if (
           throw=null)
         and 
         (
           exit_stmt_reached=false)   {
               return:=true;
               exit_stmt_reached:=true;
            
            }
          else {
            skip;
         };
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::searchMax[
  var thiz:roops_core_objectsInstrumented_AvlTree,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objectsInstrumented_AvlNode] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_20:null+roops_core_objectsInstrumented_AvlNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call searchMax[thiz,throw,t_20,thiz.roops_core_objectsInstrumented_AvlTree_root];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=t_20;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::searchNode[
  var thiz:roops_core_objectsInstrumented_AvlTree,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objectsInstrumented_AvlNode,
  var x:JavaPrimitiveIntegerValue] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_14:null+roops_core_objectsInstrumented_AvlNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call search[thiz,throw,t_14,x,thiz.roops_core_objectsInstrumented_AvlTree_root];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=t_14;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::fajita_roopsGoal_initialization[
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_0:=false;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_1:=false;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_2:=false;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_3:=false;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_4:=false;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_5:=false;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_6:=false;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_7:=false;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_myRoopsArray:=((null+roops_utilInstrumented_RoopsArray) & (null));
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::search[
  var thiz:roops_core_objectsInstrumented_AvlTree,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objectsInstrumented_AvlNode,
  var x:JavaPrimitiveIntegerValue,
  var arg:null+roops_core_objectsInstrumented_AvlNode] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_15:boolean;
            var var_4_t:null+roops_core_objectsInstrumented_AvlNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_4_t:=arg;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_15:=(neq[var_4_t,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_6:=(equ[t_15,
                     false]=>(true)else(false));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[ClassFields]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_7:=(neq[var_4_t,
                     null]=>(true)else(false));
               };
            } else {
               skip;
            };
            var var_5_ws_1:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_5_ws_1:=(neq[var_4_t,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_5_ws_1]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_16:boolean;
                  var t_17:boolean;
                  var t_19:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_16:=(pred_java_primitive_integer_value_lt[x,
                                                         var_4_t.roops_core_objectsInstrumented_AvlNode_element]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[ClassFields]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_2:=(equ[t_16,
                           false]=>(true)else(false));
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[ClassFields]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_3:=(pred_java_primitive_integer_value_lt[x,
                                                            var_4_t.roops_core_objectsInstrumented_AvlNode_element]=>(true)else(false));
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_17:=(pred_java_primitive_integer_value_gt[x,
                                                         var_4_t.roops_core_objectsInstrumented_AvlNode_element]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[ClassFields]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_4:=(equ[t_17,
                           false]=>(true)else(false));
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[ClassFields]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        ClassFields.roops_core_objectsInstrumented_AvlTree_roops_goal_5:=(pred_java_primitive_integer_value_gt[x,
                                                            var_4_t.roops_core_objectsInstrumented_AvlNode_element]=>(true)else(false));
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_19:=(pred_java_primitive_integer_value_lt[x,
                                                         var_4_t.roops_core_objectsInstrumented_AvlNode_element]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_19=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           if isEmptyOrNull[var_4_t]{
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              var_4_t:=var_4_t.roops_core_objectsInstrumented_AvlNode_left;
                           };
                        } else {
                           skip;
                        };
                     } else    {
                           var t_18:boolean;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_18:=(pred_java_primitive_integer_value_gt[x,
                                                                  var_4_t.roops_core_objectsInstrumented_AvlNode_element]=>(true)else(false));
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if t_18=true{
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false){
                                    if isEmptyOrNull[var_4_t]{
                                       throw:=java_lang_NullPointerExceptionLit;
                                    } else {
                                       var_4_t:=var_4_t.roops_core_objectsInstrumented_AvlNode_right;
                                    };
                                 } else {
                                    skip;
                                 };
                              } else {
                                 if (
                                   throw=null)
                                 and 
                                 (
                                   exit_stmt_reached=false)   {
                                       return:=var_4_t;
                                       exit_stmt_reached:=true;
                                    
                                    }
                                  else {
                                    skip;
                                 };
                              };
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_5_ws_1:=(neq[var_4_t,
                        null]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=((null+roops_core_objectsInstrumented_AvlNode) & (null));
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::searchMin[
  var thiz:roops_core_objectsInstrumented_AvlTree,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objectsInstrumented_AvlNode] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_22:null+roops_core_objectsInstrumented_AvlNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call searchMin[thiz,throw,t_22,thiz.roops_core_objectsInstrumented_AvlTree_root];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=t_22;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objectsInstrumented_AvlTree::searchMinTest[
  var throw:java_lang_Throwable+null,
  var tree:null+roops_core_objectsInstrumented_AvlTree] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_11:boolean;
            var t_12:boolean;
            var t_13:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_12:=(neq[tree,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_12=true   {
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[tree]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call repOK[tree,throw,t_13];
                        };
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_13=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_11:=true;
                           } else {
                              skip;
                           };
                        } else {
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_11:=false;
                           } else {
                              skip;
                           };
                        };
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_11:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_11=true   {
                     var t_10:null+roops_core_objectsInstrumented_AvlNode;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[tree]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call searchMin[tree,throw,t_10];
                        };
                     } else {
                        skip;
                     };
                     var var_3_ret_val:null+roops_core_objectsInstrumented_AvlNode;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_3_ret_val:=t_10;
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }



