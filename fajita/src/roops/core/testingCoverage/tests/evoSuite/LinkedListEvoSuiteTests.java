/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 31 20:46:08 ART 2014
 */

package roops.core.testingCoverage.tests.evoSuite;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.junit.Test;

import roops.core.testingCoverage.base.LinkedListNode;
import roops.core.testingCoverage.path.LinkedListRemoveIndex;
import ar.uba.dc.rfm.tools.TestCoverageTool;

public class LinkedListEvoSuiteTests {


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I88 Branch 25 IF_ICMPEQ L241 - false
   */

  @Test
  public void test00()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      linkedList0.header.setNextNode(linkedListNode0);
      linkedListNode0.setPreviousNode(linkedList0.header);
      LinkedListRemoveIndex.addLastTest(linkedList0, (Object) linkedListNode0.next);
      Object object0 = new Object();
      linkedList0.size = 0;
      LinkedListRemoveIndex.containsTest(linkedList0, object0);
      assertEquals(1, linkedList0.modCount);
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I55 Branch 22 IF_ACMPEQ L229 - false
   */

  @Test
  public void test01()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      linkedList0.header.next = linkedListNode0;
      LinkedListRemoveIndex.removeIndexTest(linkedList0, (-1942));
      assertEquals(0, linkedList0.size);
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I62 Branch 16 IF_ICMPGE L178 - false
   * 2 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I98 Branch 17 IF_ICMPLT L183 - false
   */

  @Test
  public void test02()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      linkedListNode0.setPreviousNode(linkedList0.header);
      linkedList0.header.next = linkedListNode0;
      LinkedListRemoveIndex.addLastTest(linkedList0, (Object) linkedListNode0.next);
      LinkedListRemoveIndex.addLastTest(linkedList0, (Object) linkedListNode0.next);
      LinkedListRemoveIndex.removeIndexTest(linkedList0, 0);
      assertEquals(1, linkedList0.size);
      assertEquals(3, linkedList0.modCount);
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I39 Branch 15 IF_ICMPLE L170 - false
   */

  @Test
  public void test03()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      LinkedListRemoveIndex linkedList1 = new LinkedListRemoveIndex();
      linkedList0.header.next = linkedListNode0;
      linkedList1.header = linkedList0.header;
      linkedList1.header.previous = linkedList0.header;
      // Undeclared exception!
      try {
        LinkedListRemoveIndex.removeIndexTest(linkedList1, 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  TestCoverageTool.pathReport(linkedList0);
  TestCoverageTool.pathReport(linkedList1);}

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I22 Branch 14 IF_ICMPNE L166 - false
   */

  @Test
  public void test04()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      linkedListNode0.setPreviousNode(linkedList0.header);
      linkedList0.header.next = linkedListNode0;
      // Undeclared exception!
      try {
        LinkedListRemoveIndex.removeIndexTest(linkedList0, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.contains(Ljava/lang/Object;)Z: I6 Branch 9 IF_ICMPEQ L81 - true
   * 2 roops.core.testingCoverage.core.LinkedListRemoveIndex.isEqualValue(Ljava/lang/Object;Ljava/lang/Object;)Z: I15 Branch 11 IFNONNULL L105 - false
   * 3 roops.core.testingCoverage.core.LinkedListRemoveIndex.indexOf(Ljava/lang/Object;)I: I52 Branch 8 IF_ACMPNE L60 - false
   */

  @Test
  public void test05()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      linkedListNode0.setPreviousNode(linkedList0.header);
      linkedList0.header.next = linkedListNode0;
      LinkedListRemoveIndex.addLastTest(linkedList0, (Object) null);
      Object object0 = new Object();
      LinkedListRemoveIndex.containsTest(linkedList0, object0);
      assertEquals(1, linkedList0.modCount);
      assertEquals(1, linkedList0.size);
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 6
  /*
   * 8 covered goals:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.contains(Ljava/lang/Object;)Z: I6 Branch 9 IF_ICMPEQ L81 - false
   * 2 roops.core.testingCoverage.core.LinkedListRemoveIndex.isEqualValue(Ljava/lang/Object;Ljava/lang/Object;)Z: I4 Branch 10 IF_ACMPNE L102 - true
   * 3 roops.core.testingCoverage.core.LinkedListRemoveIndex.isEqualValue(Ljava/lang/Object;Ljava/lang/Object;)Z: I4 Branch 10 IF_ACMPNE L102 - false
   * 4 roops.core.testingCoverage.core.LinkedListRemoveIndex.isEqualValue(Ljava/lang/Object;Ljava/lang/Object;)Z: I15 Branch 11 IFNONNULL L105 - true
   * 5 roops.core.testingCoverage.core.LinkedListRemoveIndex.containsTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;Ljava/lang/Object;)V: I6 Branch 4 IFEQ L37 - false
   * 6 roops.core.testingCoverage.core.LinkedListRemoveIndex.indexOf(Ljava/lang/Object;)I: I29 Branch 7 IFEQ L65 - true
   * 7 roops.core.testingCoverage.core.LinkedListRemoveIndex.indexOf(Ljava/lang/Object;)I: I29 Branch 7 IFEQ L65 - false
   * 8 roops.core.testingCoverage.core.LinkedListRemoveIndex.indexOf(Ljava/lang/Object;)I: I52 Branch 8 IF_ACMPNE L60 - true
   */

  @Test
  public void test06()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      linkedListNode0.setPreviousNode(linkedList0.header);
      linkedList0.header.next = linkedListNode0;
      LinkedListRemoveIndex.addLastTest(linkedList0, (Object) linkedListNode0.next);
      LinkedListRemoveIndex.addLastTest(linkedList0, (Object) linkedListNode0.next);
      LinkedListRemoveIndex.containsTest(linkedList0, (Object) linkedList0.header.next);
      assertEquals(2, linkedList0.size);
      assertEquals(2, linkedList0.modCount);
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.removeIndexTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;I)V: I6 Branch 6 IFEQ L45 - true
   */

  @Test
  public void test07()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListRemoveIndex.removeIndexTest(linkedList0, (-1604));
      assertEquals(0, linkedList0.modCount);
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.removeIndexTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;I)V: I3 Branch 5 IFNULL L45 - true
   */

  @Test
  public void test08()  throws Throwable  {
      LinkedListRemoveIndex.removeIndexTest((LinkedListRemoveIndex) null, 0);
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I45 Branch 21 IFNONNULL L226 - false
   * 2 roops.core.testingCoverage.core.LinkedListRemoveIndex.containsTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;Ljava/lang/Object;)V: I3 Branch 3 IFNULL L37 - false
   * 3 roops.core.testingCoverage.core.LinkedListRemoveIndex.containsTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;Ljava/lang/Object;)V: I6 Branch 4 IFEQ L37 - true
   */

  @Test
  public void test09()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      LinkedListRemoveIndex.containsTest(linkedList0, (Object) linkedList0.header.next);
      assertEquals(0, linkedList0.modCount);
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.containsTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;Ljava/lang/Object;)V: I3 Branch 3 IFNULL L37 - true
   */

  @Test
  public void test10()  throws Throwable  {
      LinkedListRemoveIndex.containsTest((LinkedListRemoveIndex) null, (Object) null);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.addLastTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;Ljava/lang/Object;)V: I6 Branch 2 IFEQ L29 - true
   * 2 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I4 Branch 19 IFNONNULL L213 - false
   */

  @Test
  public void test11()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListRemoveIndex.addLastTest(linkedList0, (Object) linkedList0.header);
      assertEquals(0, linkedList0.size);
  TestCoverageTool.pathReport(linkedList0);}

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.addLastTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;Ljava/lang/Object;)V: I3 Branch 1 IFNULL L29 - true
   */

  @Test
  public void test12()  throws Throwable  {
      LinkedListRemoveIndex.addLastTest((LinkedListRemoveIndex) null, (Object) null);
  }

  //Test case number: 13
  /*
   * 26 covered goals:
   * 1 roops.core.testingCoverage.core.LinkedListRemoveIndex.addNodeBefore(Lroops/core/testingCoverage/base/LinkedListNode;Ljava/lang/Object;)V: root-Branch
   * 2 roops.core.testingCoverage.core.LinkedListRemoveIndex.addLast(Ljava/lang/Object;)Z: root-Branch
   * 3 roops.core.testingCoverage.core.LinkedListRemoveIndex.createNode(Ljava/lang/Object;)Lroops/core/testingCoverage/base/LinkedListNode;: root-Branch
   * 4 roops.core.testingCoverage.core.LinkedListRemoveIndex.removeNode(Lroops/core/testingCoverage/base/LinkedListNode;)V: root-Branch
   * 5 roops.core.testingCoverage.core.LinkedListRemoveIndex.removeIndex(I)Ljava/lang/Object;: root-Branch
   * 6 roops.core.testingCoverage.core.LinkedListRemoveIndex.addNode(Lroops/core/testingCoverage/base/LinkedListNode;Lroops/core/testingCoverage/base/LinkedListNode;)V: root-Branch
   * 7 roops.core.testingCoverage.core.LinkedListRemoveIndex.<init>()V: root-Branch
   * 8 roops.core.testingCoverage.core.LinkedListRemoveIndex.addLastTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;Ljava/lang/Object;)V: I3 Branch 1 IFNULL L29 - false
   * 9 roops.core.testingCoverage.core.LinkedListRemoveIndex.addLastTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;Ljava/lang/Object;)V: I6 Branch 2 IFEQ L29 - false
   * 10 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I4 Branch 19 IFNONNULL L213 - true
   * 11 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I14 Branch 20 IFNULL L216 - true
   * 12 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I45 Branch 21 IFNONNULL L226 - true
   * 13 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I55 Branch 22 IF_ACMPEQ L229 - true
   * 14 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I69 Branch 23 IFNE L233 - true
   * 15 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I69 Branch 23 IFNE L233 - false
   * 16 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I75 Branch 24 IF_ACMPEQ L237 - true
   * 17 roops.core.testingCoverage.core.LinkedListRemoveIndex.repOK()Z: I88 Branch 25 IF_ICMPEQ L241 - true
   * 18 roops.core.testingCoverage.core.LinkedListRemoveIndex.removeIndexTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;I)V: I3 Branch 5 IFNULL L45 - false
   * 19 roops.core.testingCoverage.core.LinkedListRemoveIndex.removeIndexTest(Lroops/core/testingCoverage/core/LinkedListRemoveIndex;I)V: I6 Branch 6 IFEQ L45 - false
   * 20 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I3 Branch 12 IFGE L162 - true
   * 21 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I18 Branch 13 IFNE L166 - false
   * 22 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I22 Branch 14 IF_ICMPNE L166 - true
   * 23 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I39 Branch 15 IF_ICMPLE L170 - true
   * 24 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I62 Branch 16 IF_ICMPGE L178 - true
   * 25 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I137 Branch 18 IF_ICMPGT L195 - true
   * 26 roops.core.testingCoverage.core.LinkedListRemoveIndex.getNode(IZ)Lroops/core/testingCoverage/base/LinkedListNode;: I137 Branch 18 IF_ICMPGT L195 - false
   */

  @Test
  public void test13()  throws Throwable  {
      LinkedListRemoveIndex linkedList0 = new LinkedListRemoveIndex();
      LinkedListNode linkedListNode0 = new LinkedListNode();
      linkedList0.header = linkedListNode0;
      linkedListNode0.setPreviousNode(linkedList0.header);
      linkedList0.header.next = linkedListNode0;
      LinkedListRemoveIndex.addLastTest(linkedList0, (Object) linkedListNode0.next);
      LinkedListRemoveIndex.removeIndexTest(linkedList0, 0);
      assertEquals(2, linkedList0.modCount);
      TestCoverageTool.pathReport(linkedList0);}
}
